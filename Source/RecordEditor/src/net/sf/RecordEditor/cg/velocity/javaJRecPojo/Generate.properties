# This properties files controls which velocity templates are generated,
#    skel.0          - number of templates
#    skel.n.template - Velocity template name
#    skel.n.output   - Output file name 
#    skel.n.genAt    - level to generate schema at (default once for the schema)
#                      record: generated each record in the schema
#
skel.0=9
skel.1.template=javaJRecWrapper/Read.vm
skel.1.output=&directory./example/Read&suffix..java
skel.1.description=Sample Read program
skel.2.template=javaJRecWrapper/Write.vm
skel.2.output=&directory./example/Write&suffix..java
skel.2.description=Sample Write program
skel.3.template=javaJRec/FieldNames.vm
skel.3.output=&directory./data/FieldNames&suffix..java
skel.3.description=Class with the Fields names defined as final fields

skel.4.template=$std.javaPojo/IDataUpdate.vm
skel.4.genAt=record
skel.4.output=&directory./def/I&recordSuffix.Upd.java
skel.4.description=Interface that describes has set... Methods for the Cobol fields
skel.5.template=$std.javaPojo/IDataPojo.vm
skel.5.genAt=record
skel.5.output=&directory./def/I&recordSuffix.Pojo.java
skel.5.description=Interface that describes has get.../set... Methods for the Cobol fields
skel.6.template=$std.javaPojo/DataPojo.vm
skel.6.genAt=record
skel.6.output=&directory./data/Line&recordSuffix.Pojo.java
skel.6.description=Java POJO class that represents the "Cobol" record
skel.7.template=$std.javaPojo/IData.vm
skel.7.output=&directory./def/I&recordSuffix..java
skel.7.genAt=record
skel.7.description=Interface that describes all the Cobol fields (as get...)
skel.8.template=$std.stdPojo/DataJR.vm
skel.8.output=&directory./data/Line&recordSuffix.JR.java
skel.8.genAt=record
skel.8.description=A "line wrapper" class that provides get.../set... methods for the fields
skel.9.template=$std.javaPojo/Code.vm
skel.9.output=&directory./data/Code&suffix..java
skel.9.description=A class to copy to/from the POJO and JRecord wrapper classes

