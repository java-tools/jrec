###
### Conversion properties
###
###  CnvCode.{idx} Integer Code identifier the cobol Compiler
###  CnvName.{idx} Compiler Name

###  CnvBinaryId.{idx} Binary Code normally leave blank or use CnvCode value
###  CnvFloatSync.{idx} Float sync point (leave out for 4)
###  CnvDoubleSync.{idx} Double sync point (leave out for 8)
###
###  CnvSizes.{idx} binary sizes that are available seperated by commas - 1,2,4,8 
###  CnvSyncSizes.{idx} binary Sync sizes  seperated by commas - 1,2,4,8 
###  CnvSyncPosition.{idx} binary Sync positions  seperated by commas - 1,2,4,8 
###
###  CnvType.{idx} types seperated by comma's
###  CnvPositiveType.{idx} types seperated by comma's (levae out if positive types
###                        are the same as normal types)
###                        Types are Pic 9, comp,comp-1,comp-2,comp-3,....
###
###      Types:
###  Code:      be           le              pbe              ple
###  Desc:      Big Endian   Little Endiean  +ve Big Endian   +ve Little Endiean
###
###  Code:      f            d              pd                ppd
###  Desc:      Float        Double         Packed Decimal    Positive decimal   
###
#
#
####   Open Cobol definition
####  *---------------------*
#
#CnvCode.1=51
#CnvName.1=Test Open Cobol
#CnvSizes.1=1,2,4,8
#CnvSyncPosition.1=1,2,4,8
#
#
#
####   Open Cobol - bs2000 definition
####  *------------------------------*
#
#
#CnvCode.2=52
#CnvName.2=Test Open Cobol - bs2000
#CnvSizes.2=2,4,8
#CnvSyncPosition.2=2,2,4,8
#
#
#
####   Open Cobol - mvs definition
####  *---------------------------*
#
#
#CnvCode.3=53
#CnvName.3=Test Open Cobol - MVS
#CnvSizes.3=2,4,8
#CnvSyncPosition.3=2,2,4,8
#
#
#
#
####   Open Cobol - Microfocus definition
####  *----------------------------------*
#
#
#CnvCode.4=54
#CnvName.4=Test Open Cobol - Microfocus
#CnvFloatSync.4=1
#CnvDoubleSync.4=1
#CnvSizes.4=1,2,3,4,5,6,7,8
#CnvSyncPosition.4=1,1,1,1
#CnvType.4=zd,be,f,d,pd,be,le
#CnvPositiveType.4=zd,pbe,f,d,pd,pbe,ple,zd
#
