#set ($type = "Xml")
#if (${generateOptions.getTemplateDtls().getGenerateOption("tojson")})
#*  *##set ($type = "Json")
#end
#set ($xx = "")
#if ($lang == "Java")
#*  *##set ($xx = "*")
#elseif ($type == "Xml")
#!/usr/bin/jjs -J-Djava.class.path=../lib/cb2xml.jar:../lib/JRecord.jar:../lib/Cobol2Xml.jar
#else
#!/usr/bin/jjs -J-Djava.class.path=../lib/cb2xml.jar:../lib/JRecord.jar:../lib/Cobol2Json.jar:../lib/Jackson.jar
#end
#macro(commentjjs)
  *   Author:  RecordEditor~CodeGen
#if ($lang != "Java")
  * Language:  Java Script (jjs interpreter that comes with java 8/9)  
#end
  *        
  * *------------- Keep this notice in your final code ---------------
  * *   This code was generated by JRecord projects CodeGen program
  * *            on the: ${generateOptions.getTemplateDtls().currentDateTime} 
  * *     from Copybook: ${generateOptions.getSchemaDefinition().schemaShortName}
  * *           Dialect: ${generateOptions.getDialect().utlCode}
  * *          Template: ${generateOptions.getTemplateDtls().template}
  * *             Split: ${generateOptions.getSplitOption().utlCode}   
  * * File Organization: ${generateOptions.getFileStructureCode().utlCode}   
  * *              Font: ${generateOptions.font}
  * *   
  * *    CodeGen Author: Bruce Martin
  * *-----------------------------------------------------------------
  *                           
  *   This program was generated by the ${SourceApplication.getApplicationId()}/CodeGen.
  *   It uses JRecord's Cobol2Xml programs to do the conversion. 
  *
  *   See:    ${SourceApplication.getApplicationId()}   ${SourceApplication.getWebsite()}
  *           JRecord        https://sourceforge.net/projects/jrecord/  
#*  *##if ($type == "Xml")
  *           CobolToXml     https://sourceforge.net/projects/coboltoxml/  
#*  *##end
  *
  *   Good Luck
  *              Bruce
  *
  * ------------------------------------------------------------------
  * v01  CodeGen        ${generateOptions.getTemplateDtls().currentDate}  Initial version
  *     (Bruce Martin)
  *
  * ------------------------------------------------------------------ 
  *${xx}/
#end
#macro(codeStart)
#commentjjs()

#*  *##if ($type == "Xml")
    var Cobol2${type} = Java.type("net.sf.JRecord.cbl2xml.Cobol2${type}")
#*  *##else
    var Cobol2Json = Java.type("net.sf.cobolToJson.Cobol2Json")
#*  *##end
    var constants = Cobol2${type}.JR_CONSTANTS
	
    Cobol2${type}.newCobol2${type}("${generateOptions.getSchemaDefinition().getSchemaName()}")

#callConversionjjs()
#end
#macro(callConversionJava)
        JRecordConstantVars constants = Cobol2${type}.JR_CONSTANTS;
	
        Cobol2${type}.newCobol2${type}("${generateOptions.getSchemaDefinition().getSchemaName()}")

#callConversionjjs()
#end
#macro(callConversionjjs)
                                         // Cobol Options
                         .setFileOrganization(constants.${generateOptions.getFileStructureCode().utlCode})
                         .setDialect(constants.${generateOptions.getDialect().utlCode})               
                         .setSplitCopybook(constants.${generateOptions.getSplitOption().utlCode})      
                         .setFont("${generateOptions.font}")
#end
#macro (genSelect $recSel $sp)
#*  *##if (${recSel.getType()} == ${const.TYPE_ATOM})
                            $sp Cobol2Xml.newFieldSelection("${recSel.field.cobolName}", "${recSel.getValue()}")
#*  *##else
	
#*      *##if(${recSel.getBooleanOperator()} == "||") 	
                            $sp Cobol2Xml.newOr(
#*      *##else
                            $sp Cobol2Xml.newAnd(
#*      *##end
#*      *##set($sep = "   ")
#*      *##foreach ( $rs in  ${recSel.getItems()})
#genSelect($rs, $sep)
#*          *##set($sep = "  ,")
#*      *##end
                   )
#*  *##end
#end
#macro(fromCobolAttributes)
#*  *##if (${generateOptions.schemaDefinition.getRecords().size()} > 1)
#*      *##set ($const = ${generateOptions.getConstantValues()})

	                          // Tell JRecord how determine which record is which by Testing the Record-Type field      
#*      *##foreach( $r in ${generateOptions.schemaDefinition.getRecords()}) 
#*          *##if (${r.getRecordSelection()})
##                         .setRecordSelection("PO-Record",       Cobol2Xml.newFieldSelection("Record-Type","H1")
                         .setRecordSelection("${r.getCobolName()}",
#genSelect(${r.getRecordSelection()}, "")
                         )  
#*          *##end
#*      *##end

#*  *##end   
#end
