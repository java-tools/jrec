       
.*b2h html <PRE><SPAN CLASS="gutter">   1:</SPAN><SPAN CLASS="syntax1">/*</SPAN>
.*b2h html <SPAN CLASS="gutter">   2:</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">*</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">@Author</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">Bruce</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">Martin</SPAN>
.*b2h html <SPAN CLASS="gutter">   3:</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">*</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">Created</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">on</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">7/02/2007</SPAN>
.*b2h html <SPAN CLASS="gutter">   4:</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">*</SPAN>
.*b2h html <SPAN CLASS="gutterH">   5:</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">*</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">Purpose:</SPAN>
.*b2h html <SPAN CLASS="gutter">   6:</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">*</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">Demonstrate</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">writing</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">a</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">CopybookLoader</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">(ie</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">a</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">class</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">to</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">read</SPAN>
.*b2h html <SPAN CLASS="gutter">   7:</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">*</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">a</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">record</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">layout</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">or</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">Copybook</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">from</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">an</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">external</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">file).</SPAN>
.*b2h html <SPAN CLASS="gutter">   8:</SPAN><SPAN CLASS="syntax1"> </SPAN><SPAN CLASS="syntax1">*/</SPAN>
.*b2h html <SPAN CLASS="gutter">   9:</SPAN><SPAN CLASS="syntax9">package</SPAN> net.sf.RecordEditor.examples.CsvLayout;
.*b2h html <SPAN CLASS="gutterH">  10:</SPAN>
.*b2h html <SPAN CLASS="gutter">  11:</SPAN><SPAN CLASS="syntax9">import</SPAN> java.io.BufferedReader;
.*b2h html <SPAN CLASS="gutter">  12:</SPAN><SPAN CLASS="syntax9">import</SPAN> java.io.FileReader;
.*b2h html <SPAN CLASS="gutter">  13:</SPAN><SPAN CLASS="syntax9">import</SPAN> java.io.IOException;
.*b2h html <SPAN CLASS="gutter">  14:</SPAN><SPAN CLASS="syntax9">import</SPAN> java.util.HashMap;
.*b2h html <SPAN CLASS="gutterH">  15:</SPAN><SPAN CLASS="syntax9">import</SPAN> java.util.StringTokenizer;
.*b2h html <SPAN CLASS="gutter">  16:</SPAN>
.*b2h html <SPAN CLASS="gutter">  17:</SPAN><SPAN CLASS="syntax9">import</SPAN> javax.xml.parsers.ParserConfigurationException;
.*b2h html <SPAN CLASS="gutter">  18:</SPAN>
.*b2h html <SPAN CLASS="gutter">  19:</SPAN><SPAN CLASS="syntax9">import</SPAN> org.xml.sax.SAXException;
.*b2h html <SPAN CLASS="gutterH">  20:</SPAN>
.*b2h html <SPAN CLASS="gutter">  21:</SPAN><SPAN CLASS="syntax9">import</SPAN> net.sf.JRecord.External.CopybookLoader;
.*b2h html <SPAN CLASS="gutter">  22:</SPAN><SPAN CLASS="syntax9">import</SPAN> net.sf.JRecord.External.ExternalField;
.*b2h html <SPAN CLASS="gutter">  23:</SPAN><SPAN CLASS="syntax9">import</SPAN> net.sf.JRecord.External.ExternalRecord;
.*b2h html <SPAN CLASS="gutter">  24:</SPAN><SPAN CLASS="syntax9">import</SPAN> net.sf.JRecord.Log.AbsSSLogger;
.*b2h html <SPAN CLASS="gutterH">  25:</SPAN><SPAN CLASS="syntax9">import</SPAN> net.sf.JRecord.Numeric.Convert;
.*b2h html <SPAN CLASS="gutter">  26:</SPAN><SPAN CLASS="syntax9">import</SPAN> net.sf.JRecord.Types.Type;
.*b2h html <SPAN CLASS="gutter">  27:</SPAN><SPAN CLASS="syntax9">import</SPAN> net.sf.JRecord.Common.Constants;
.*b2h html <SPAN CLASS="gutter">  28:</SPAN><SPAN CLASS="syntax9">import</SPAN> net.sf.JRecord.Common.RecordException;
.*b2h html <SPAN CLASS="gutter">  29:</SPAN>
.*b2h html <SPAN CLASS="gutterH">  30:</SPAN><SPAN CLASS="syntax3">/**</SPAN>
.*b2h html <SPAN CLASS="gutter">  31:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">This</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">class</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">reads</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">a</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">Record</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">Layout</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">(</SPAN><SPAN CLASS="syntax3">Copybook</SPAN><SPAN CLASS="syntax3">)</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">stored</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">in</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">a</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">tab</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">delimited</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">file</SPAN><SPAN CLASS="syntax3">.</SPAN>
.*b2h html <SPAN CLASS="gutter">  32:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">Fields</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">in</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">the</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">file</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">are</SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">ol</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
.*b2h html <SPAN CLASS="gutter">  33:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">li</SPAN><SPAN CLASS="syntax17">&gt;</SPAN><SPAN CLASS="syntax3">Starting</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">Position</SPAN>
.*b2h html <SPAN CLASS="gutter">  34:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">li</SPAN><SPAN CLASS="syntax17">&gt;</SPAN><SPAN CLASS="syntax3">Length</SPAN>
.*b2h html <SPAN CLASS="gutterH">  35:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">li</SPAN><SPAN CLASS="syntax17">&gt;</SPAN><SPAN CLASS="syntax3">Number</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">of</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">places</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">after</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">the</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">decimal</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">point</SPAN>
.*b2h html <SPAN CLASS="gutter">  36:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">li</SPAN><SPAN CLASS="syntax17">&gt;</SPAN><SPAN CLASS="syntax3">Field</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">Name</SPAN>
.*b2h html <SPAN CLASS="gutter">  37:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">li</SPAN><SPAN CLASS="syntax17">&gt;</SPAN><SPAN CLASS="syntax3">Field</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">Type</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">(</SPAN><SPAN CLASS="syntax3">String</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">[</SPAN><SPAN CLASS="syntax3">or</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">char</SPAN><SPAN CLASS="syntax3">]</SPAN><SPAN CLASS="syntax3">,</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">num</SPAN><SPAN CLASS="syntax3">,</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">mainframe_zoned</SPAN><SPAN CLASS="syntax3">,</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">fuji_zoned</SPAN><SPAN CLASS="syntax3">)</SPAN>
.*b2h html <SPAN CLASS="gutter">  38:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax17">&lt;</SPAN><SPAN CLASS="syntax17">/</SPAN><SPAN CLASS="syntax17">ol</SPAN><SPAN CLASS="syntax17">&gt;</SPAN>
.*b2h html <SPAN CLASS="gutter">  39:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN>
.*b2h html <SPAN CLASS="gutterH">  40:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax12">@author</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">Bruce</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">Martin</SPAN>
.*b2h html <SPAN CLASS="gutter">  41:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN>
.*b2h html <SPAN CLASS="gutter">  42:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*/</SPAN>
.*b2h html <SPAN CLASS="gutter">  43:</SPAN><SPAN CLASS="syntax8">public</SPAN> <SPAN CLASS="syntax10">class</SPAN> CsvLayoutReader <SPAN CLASS="syntax8">implements</SPAN> CopybookLoader <SPAN CLASS="syntax18">{</SPAN>
.*b2h html <SPAN CLASS="gutter">  44:</SPAN>
.*b2h html <SPAN CLASS="gutterH">  45:</SPAN>    <SPAN CLASS="syntax8">private</SPAN> <SPAN CLASS="syntax8">static</SPAN> HashMap typeConv <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax8">new</SPAN> <SPAN CLASS="syntax6">HashMap</SPAN>();
.*b2h html <SPAN CLASS="gutter">  46:</SPAN>
.*b2h html <SPAN CLASS="gutter">  47:</SPAN>    <SPAN CLASS="syntax8">static</SPAN> <SPAN CLASS="syntax18">{</SPAN>
.*b2h html <SPAN CLASS="gutter">  48:</SPAN>        typeConv.<SPAN CLASS="syntax6">put</SPAN>(<SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">string</SPAN><SPAN CLASS="syntax13">&quot;</SPAN>, <SPAN CLASS="syntax8">new</SPAN> <SPAN CLASS="syntax6">Integer</SPAN>(Type.ftChar));
.*b2h html <SPAN CLASS="gutter">  49:</SPAN>        typeConv.<SPAN CLASS="syntax6">put</SPAN>(<SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">char</SPAN><SPAN CLASS="syntax13">&quot;</SPAN>, <SPAN CLASS="syntax8">new</SPAN> <SPAN CLASS="syntax6">Integer</SPAN>(Type.ftChar));
.*b2h html <SPAN CLASS="gutterH">  50:</SPAN>        typeConv.<SPAN CLASS="syntax6">put</SPAN>(<SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">num</SPAN><SPAN CLASS="syntax13">&quot;</SPAN>, <SPAN CLASS="syntax8">new</SPAN> <SPAN CLASS="syntax6">Integer</SPAN>(Type.ftNumRightJustified));
.*b2h html <SPAN CLASS="gutter">  51:</SPAN>        typeConv.<SPAN CLASS="syntax6">put</SPAN>(<SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">mainframe_zoned</SPAN><SPAN CLASS="syntax13">&quot;</SPAN>, <SPAN CLASS="syntax8">new</SPAN> <SPAN CLASS="syntax6">Integer</SPAN>(Type.ftZonedNumeric));
.*b2h html <SPAN CLASS="gutter">  52:</SPAN>        typeConv.<SPAN CLASS="syntax6">put</SPAN>(<SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">fuji_zoned</SPAN><SPAN CLASS="syntax13">&quot;</SPAN>, <SPAN CLASS="syntax8">new</SPAN> <SPAN CLASS="syntax6">Integer</SPAN>(Type.ftFjZonedNumeric));
.*b2h html <SPAN CLASS="gutter">  53:</SPAN>    <SPAN CLASS="syntax18">}</SPAN>
.*b2h html <SPAN CLASS="gutter">  54:</SPAN>
.*b2h html <SPAN CLASS="gutterH">  55:</SPAN>    <SPAN CLASS="syntax3">/**</SPAN>
.*b2h html <SPAN CLASS="gutter">  56:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax12">@see</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">net</SPAN><SPAN CLASS="syntax3">.</SPAN><SPAN CLASS="syntax3">sf</SPAN><SPAN CLASS="syntax3">.</SPAN><SPAN CLASS="syntax3">RecordEditor</SPAN><SPAN CLASS="syntax3">.</SPAN><SPAN CLASS="syntax3">fileLayout</SPAN><SPAN CLASS="syntax3">.</SPAN><SPAN CLASS="syntax3">CopybookLoader</SPAN><SPAN CLASS="syntax3">#</SPAN><SPAN CLASS="syntax3">loadCopyBook</SPAN><SPAN CLASS="syntax3">(</SPAN><SPAN CLASS="syntax3">java</SPAN><SPAN CLASS="syntax3">.</SPAN><SPAN CLASS="syntax3">lang</SPAN><SPAN CLASS="syntax3">.</SPAN><SPAN CLASS="syntax3">String</SPAN><SPAN CLASS="syntax3">,</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">int</SPAN><SPAN CLASS="syntax3">,</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">int</SPAN><SPAN CLASS="syntax3">,</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">java</SPAN><SPAN CLASS="syntax3">.</SPAN><SPAN CLASS="syntax3">lang</SPAN><SPAN CLASS="syntax3">.</SPAN><SPAN CLASS="syntax3">String</SPAN><SPAN CLASS="syntax3">,</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">int</SPAN><SPAN CLASS="syntax3">,</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">int</SPAN><SPAN CLASS="syntax3">,</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">net</SPAN><SPAN CLASS="syntax3">.</SPAN><SPAN CLASS="syntax3">sf</SPAN><SPAN CLASS="syntax3">.</SPAN><SPAN CLASS="syntax3">RecordEditor</SPAN><SPAN CLASS="syntax3">.</SPAN><SPAN CLASS="syntax3">utils</SPAN><SPAN CLASS="syntax3">.</SPAN><SPAN CLASS="syntax3">log</SPAN><SPAN CLASS="syntax3">.</SPAN><SPAN CLASS="syntax3">AbsSSLogger</SPAN><SPAN CLASS="syntax3">)</SPAN>
.*b2h html <SPAN CLASS="gutter">  57:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*/</SPAN>
.*b2h html <SPAN CLASS="gutter">  58:</SPAN>    <SPAN CLASS="syntax8">public</SPAN> ExternalRecord <SPAN CLASS="syntax6">loadCopyBook</SPAN>(String copyBookFile,
.*b2h html <SPAN CLASS="gutter">  59:</SPAN>            <SPAN CLASS="syntax10">int</SPAN> splitCopybookOption, <SPAN CLASS="syntax10">int</SPAN> dbIdx, String font, <SPAN CLASS="syntax10">int</SPAN> binFormat,
.*b2h html <SPAN CLASS="gutterH">  60:</SPAN>            <SPAN CLASS="syntax10">int</SPAN> systemId, AbsSSLogger log) <SPAN CLASS="syntax8">throws</SPAN> IOException, SAXException,
.*b2h html <SPAN CLASS="gutter">  61:</SPAN>            ParserConfigurationException, RecordException <SPAN CLASS="syntax18">{</SPAN>
.*b2h html <SPAN CLASS="gutter">  62:</SPAN>
.*b2h html <SPAN CLASS="gutter">  63:</SPAN>        <SPAN CLASS="syntax10">int</SPAN> rt <SPAN CLASS="syntax18">=</SPAN> Constants.rtRecordLayout;
.*b2h html <SPAN CLASS="gutter">  64:</SPAN>        <SPAN CLASS="syntax8">if</SPAN> (binFormat <SPAN CLASS="syntax18">=</SPAN><SPAN CLASS="syntax18">=</SPAN> Convert.FMT_MAINFRAME) <SPAN CLASS="syntax18">{</SPAN>
.*b2h html <SPAN CLASS="gutterH">  65:</SPAN>            rt <SPAN CLASS="syntax18">=</SPAN> Constants.rtBinaryRecord;
.*b2h html <SPAN CLASS="gutter">  66:</SPAN>        <SPAN CLASS="syntax18">}</SPAN>
.*b2h html <SPAN CLASS="gutter">  67:</SPAN>
.*b2h html <SPAN CLASS="gutter">  68:</SPAN>        ExternalRecord rec <SPAN CLASS="syntax18">=</SPAN> ExternalRecord.<SPAN CLASS="syntax6">getNullRecord</SPAN>(copyBookFile,
.*b2h html <SPAN CLASS="gutter">  69:</SPAN>                rt,
.*b2h html <SPAN CLASS="gutterH">  70:</SPAN>                font);
.*b2h html <SPAN CLASS="gutter">  71:</SPAN>
.*b2h html <SPAN CLASS="gutter">  72:</SPAN>        <SPAN CLASS="syntax6">insertFields</SPAN>(rec, copyBookFile);
.*b2h html <SPAN CLASS="gutter">  73:</SPAN>
.*b2h html <SPAN CLASS="gutter">  74:</SPAN>        <SPAN CLASS="syntax8">return</SPAN> rec;
.*b2h html <SPAN CLASS="gutterH">  75:</SPAN>    <SPAN CLASS="syntax18">}</SPAN>
.*b2h html <SPAN CLASS="gutter">  76:</SPAN>
.*b2h html <SPAN CLASS="gutter">  77:</SPAN>    <SPAN CLASS="syntax3">/**</SPAN>
.*b2h html <SPAN CLASS="gutter">  78:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">Add</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">fields</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">to</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">the</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">copybook</SPAN>
.*b2h html <SPAN CLASS="gutter">  79:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax12">@param</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">rec</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">copybook</SPAN>
.*b2h html <SPAN CLASS="gutterH">  80:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax12">@param</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">copyBookFile</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">copybook</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">file</SPAN>
.*b2h html <SPAN CLASS="gutter">  81:</SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3"> </SPAN><SPAN CLASS="syntax3">*/</SPAN>
.*b2h html <SPAN CLASS="gutter">  82:</SPAN>    <SPAN CLASS="syntax8">private</SPAN> <SPAN CLASS="syntax10">void</SPAN> <SPAN CLASS="syntax6">insertFields</SPAN>(ExternalRecord rec, String copyBookFile) <SPAN CLASS="syntax18">{</SPAN>
.*b2h html <SPAN CLASS="gutter">  83:</SPAN>        String s, name, typeStr;
.*b2h html <SPAN CLASS="gutter">  84:</SPAN>        StringTokenizer t;
.*b2h html <SPAN CLASS="gutterH">  85:</SPAN>        ExternalField field;
.*b2h html <SPAN CLASS="gutter">  86:</SPAN>        <SPAN CLASS="syntax10">int</SPAN> pos, len, decimal, type;
.*b2h html <SPAN CLASS="gutter">  87:</SPAN>        <SPAN CLASS="syntax10">int</SPAN> i <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">1</SPAN>;
.*b2h html <SPAN CLASS="gutter">  88:</SPAN>        <SPAN CLASS="syntax10">int</SPAN> inputLine <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">1</SPAN>;
.*b2h html <SPAN CLASS="gutter">  89:</SPAN>        <SPAN CLASS="syntax8">try</SPAN> <SPAN CLASS="syntax18">{</SPAN>
.*b2h html <SPAN CLASS="gutterH">  90:</SPAN>            BufferedReader r <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax8">new</SPAN> <SPAN CLASS="syntax6">BufferedReader</SPAN>(<SPAN CLASS="syntax8">new</SPAN> <SPAN CLASS="syntax6">FileReader</SPAN>(copyBookFile));
.*b2h html <SPAN CLASS="gutter">  91:</SPAN>            <SPAN CLASS="syntax8">while</SPAN> ((s <SPAN CLASS="syntax18">=</SPAN> r.<SPAN CLASS="syntax6">readLine</SPAN>()) <SPAN CLASS="syntax18">!</SPAN><SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax14">null</SPAN>) <SPAN CLASS="syntax18">{</SPAN>
.*b2h html <SPAN CLASS="gutter">  92:</SPAN>                <SPAN CLASS="syntax8">if</SPAN> (<SPAN CLASS="syntax18">!</SPAN>s.<SPAN CLASS="syntax6">trim</SPAN>().<SPAN CLASS="syntax6">startsWith</SPAN>(<SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">#</SPAN><SPAN CLASS="syntax13">&quot;</SPAN>)) <SPAN CLASS="syntax18">{</SPAN>
.*b2h html <SPAN CLASS="gutter">  93:</SPAN>                    t <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax8">new</SPAN> <SPAN CLASS="syntax6">StringTokenizer</SPAN>(s, <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">\t</SPAN><SPAN CLASS="syntax13">&quot;</SPAN>);
.*b2h html <SPAN CLASS="gutter">  94:</SPAN>
.*b2h html <SPAN CLASS="gutterH">  95:</SPAN>                    <SPAN CLASS="syntax8">try</SPAN> <SPAN CLASS="syntax18">{</SPAN>
.*b2h html <SPAN CLASS="gutter">  96:</SPAN>                        pos  <SPAN CLASS="syntax18">=</SPAN> Integer.<SPAN CLASS="syntax6">parseInt</SPAN>(t.<SPAN CLASS="syntax6">nextToken</SPAN>());
.*b2h html <SPAN CLASS="gutter">  97:</SPAN>                        len  <SPAN CLASS="syntax18">=</SPAN> Integer.<SPAN CLASS="syntax6">parseInt</SPAN>(t.<SPAN CLASS="syntax6">nextToken</SPAN>());
.*b2h html <SPAN CLASS="gutter">  98:</SPAN>                        decimal <SPAN CLASS="syntax18">=</SPAN> Integer.<SPAN CLASS="syntax6">parseInt</SPAN>(t.<SPAN CLASS="syntax6">nextToken</SPAN>());
.*b2h html <SPAN CLASS="gutter">  99:</SPAN>                        name <SPAN CLASS="syntax18">=</SPAN> t.<SPAN CLASS="syntax6">nextToken</SPAN>();
.*b2h html <SPAN CLASS="gutterH"> 100:</SPAN>                        typeStr <SPAN CLASS="syntax18">=</SPAN> t.<SPAN CLASS="syntax6">nextToken</SPAN>();
.*b2h html <SPAN CLASS="gutter"> 101:</SPAN>
.*b2h html <SPAN CLASS="gutter"> 102:</SPAN>                        type <SPAN CLASS="syntax18">=</SPAN> Type.ftChar;
.*b2h html <SPAN CLASS="gutter"> 103:</SPAN>                        <SPAN CLASS="syntax8">if</SPAN> (typeStr <SPAN CLASS="syntax18">!</SPAN><SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax14">null</SPAN> <SPAN CLASS="syntax18">&amp;</SPAN><SPAN CLASS="syntax18">&amp;</SPAN> <SPAN CLASS="syntax18">!</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN>.<SPAN CLASS="syntax6">equals</SPAN>(typeStr)) <SPAN CLASS="syntax18">{</SPAN>
.*b2h html <SPAN CLASS="gutter"> 104:</SPAN>                            typeStr <SPAN CLASS="syntax18">=</SPAN> typeStr.<SPAN CLASS="syntax6">toLowerCase</SPAN>();
.*b2h html <SPAN CLASS="gutterH"> 105:</SPAN>                            <SPAN CLASS="syntax8">if</SPAN> (typeConv.<SPAN CLASS="syntax6">containsKey</SPAN>(typeStr)) <SPAN CLASS="syntax18">{</SPAN>
.*b2h html <SPAN CLASS="gutter"> 106:</SPAN>                                type <SPAN CLASS="syntax18">=</SPAN> ((Integer) typeConv.<SPAN CLASS="syntax6">get</SPAN>(typeStr)).<SPAN CLASS="syntax6">intValue</SPAN>();
.*b2h html <SPAN CLASS="gutter"> 107:</SPAN>                            <SPAN CLASS="syntax18">}</SPAN>
.*b2h html <SPAN CLASS="gutter"> 108:</SPAN>                        <SPAN CLASS="syntax18">}</SPAN>
.*b2h html <SPAN CLASS="gutter"> 109:</SPAN>
.*b2h html <SPAN CLASS="gutterH"> 110:</SPAN>                        field <SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax8">new</SPAN> <SPAN CLASS="syntax6">ExternalField</SPAN>(pos, len, name, <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN>, type,
.*b2h html <SPAN CLASS="gutter"> 111:</SPAN>                                decimal, <SPAN CLASS="syntax5">0</SPAN>, <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN>, <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN>, <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">&quot;</SPAN>, i);
.*b2h html <SPAN CLASS="gutter"> 112:</SPAN>                        rec.<SPAN CLASS="syntax6">addRecordField</SPAN>(field);
.*b2h html <SPAN CLASS="gutter"> 113:</SPAN>                        i <SPAN CLASS="syntax18">+</SPAN><SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">1</SPAN>;
.*b2h html <SPAN CLASS="gutter"> 114:</SPAN>                    <SPAN CLASS="syntax18">}</SPAN> <SPAN CLASS="syntax8">catch</SPAN> (Exception e) <SPAN CLASS="syntax18">{</SPAN>
.*b2h html <SPAN CLASS="gutterH"> 115:</SPAN>                        System.out.<SPAN CLASS="syntax6">println</SPAN>(<SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">Error</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">Adding</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">line</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&quot;</SPAN> <SPAN CLASS="syntax18">+</SPAN> inputLine
.*b2h html <SPAN CLASS="gutter"> 116:</SPAN>                                <SPAN CLASS="syntax18">+</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">:</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&quot;</SPAN> <SPAN CLASS="syntax18">+</SPAN> e.<SPAN CLASS="syntax6">getMessage</SPAN>());
.*b2h html <SPAN CLASS="gutter"> 117:</SPAN>                        e.<SPAN CLASS="syntax6">printStackTrace</SPAN>();
.*b2h html <SPAN CLASS="gutter"> 118:</SPAN>                    <SPAN CLASS="syntax18">}</SPAN>
.*b2h html <SPAN CLASS="gutter"> 119:</SPAN>                    inputLine <SPAN CLASS="syntax18">+</SPAN><SPAN CLASS="syntax18">=</SPAN> <SPAN CLASS="syntax5">1</SPAN>;
.*b2h html <SPAN CLASS="gutterH"> 120:</SPAN>                <SPAN CLASS="syntax18">}</SPAN>
.*b2h html <SPAN CLASS="gutter"> 121:</SPAN>            <SPAN CLASS="syntax18">}</SPAN>
.*b2h html <SPAN CLASS="gutter"> 122:</SPAN>        <SPAN CLASS="syntax18">}</SPAN> <SPAN CLASS="syntax8">catch</SPAN> (Exception e) <SPAN CLASS="syntax18">{</SPAN>
.*b2h html <SPAN CLASS="gutter"> 123:</SPAN>            System.out.<SPAN CLASS="syntax6">println</SPAN>(<SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">Error</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">Adding</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">line</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&quot;</SPAN> <SPAN CLASS="syntax18">+</SPAN> inputLine
.*b2h html <SPAN CLASS="gutter"> 124:</SPAN>                    <SPAN CLASS="syntax18">+</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">from</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">file</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&quot;</SPAN> <SPAN CLASS="syntax18">+</SPAN> copyBookFile
.*b2h html <SPAN CLASS="gutterH"> 125:</SPAN>                    <SPAN CLASS="syntax18">+</SPAN> <SPAN CLASS="syntax13">&quot;</SPAN><SPAN CLASS="syntax13">:</SPAN><SPAN CLASS="syntax13"> </SPAN><SPAN CLASS="syntax13">&quot;</SPAN> <SPAN CLASS="syntax18">+</SPAN> e.<SPAN CLASS="syntax6">getMessage</SPAN>());
.*b2h html <SPAN CLASS="gutter"> 126:</SPAN>            e.<SPAN CLASS="syntax6">printStackTrace</SPAN>();
.*b2h html <SPAN CLASS="gutter"> 127:</SPAN>        <SPAN CLASS="syntax18">}</SPAN>
.*b2h html <SPAN CLASS="gutter"> 128:</SPAN>    <SPAN CLASS="syntax18">}</SPAN>
.*b2h html <SPAN CLASS="gutter"> 129:</SPAN><SPAN CLASS="syntax18">}</SPAN>
.*b2h html </PRE>
